/* claro/form/Common.css */
/*========================= common css =========================*/
/* 'dijitTextBox' refers to 'dijit(TextBox|DateTextBox|CurrencyTextBox|...)' */
.claro .dijitTextBox,
.claro .dijitInputInner {
  color: #444444;
}
.claro .dijitValidationTextBoxError .dijitValidationContainer {
  background-color: #cc6666;
  background-image: url("../form/images/error.png");
  background-position: top center;
  border: solid #cc6666 0;
  width: 9px;
}
.claro .dijitTextBoxError .dijitValidationContainer {
  border-left-width: 1px;
}
.claro .dijitValidationTextBoxError .dijitValidationIcon {
  width: 0;
  background-color: transparent;
  /* so the INPUT doesn't obscure the border in rtl+a11y */

}
/* Padding for the input area of TextBox based widgets, and corresponding padding for the
 * down arrow button and the placeholder.   placeholder is explicitly listed  because
 * dijitPlaceHolder is absolutely positioned, so padding set on dijitInputField
 * won't affect it
 */
.claro .dijitTextArea,
.claro .dijitInputField .dijitPlaceHolder {
  padding: 2px;
}
.claro .dijitSelect .dijitInputField,
.claro .dijitTextBox .dijitInputField {
  padding: 1px 2px;
}
.dj_gecko .claro .dijitTextBox .dijitInputInner,
.dj_webkit .claro .dijitTextBox .dijitInputInner {
  padding-left: 1px;
  padding-right: 1px;
}
.claro .dijitSelect,
.claro .dijitSelect .dijitButtonContents,
.claro .dijitTextBox,
.claro .dijitTextBox .dijitButtonNode {
  /* color for (outer) border on *TextBox widgets, and border between input and buttons on ComboBox and Spinner */

  border-color: #d8d8d8;
  -webkit-transition-property: background-color, border;
  -moz-transition-property: background-color, border;
  transition-property: background-color, border;
  -webkit-transition-duration: 0.2s;
  -moz-transition-duration: 0.2s;
  transition-duration: 0.2s;
}
.claro .dijitSelect,
.claro .dijitTextBox {
  background-color: #ffffff;
  -moz-border-radius: 2px;
  border-radius: 2px;
}
/* hover */
.claro .dijitSelectHover,
.claro .dijitSelectHover .dijitButtonContents,
.claro .dijitTextBoxHover,
.claro .dijitTextBoxHover .dijitButtonNode {
  border-color: #cccccc;
  -webkit-transition-duration: 0.2s;
  -moz-transition-duration: 0.2s;
  transition-duration: 0.2s;
}
.claro .dijitTextBoxHover {
  background-color: #ffffff;
  background-image: none;
}
/* error state */
.claro .dijitSelectError,
.claro .dijitSelectError .dijitButtonContents,
.claro .dijitTextBoxError,
.claro .dijitTextBoxError .dijitButtonNode {
  border-color: #cc6666;
}
/* focused state */
.claro .dijitSelectFocused,
.claro .dijitSelectFocused .dijitButtonContents,
.claro .dijitTextBoxFocused,
.claro .dijitTextBoxFocused .dijitButtonNode {
  border-color: #cccccc;
  -webkit-transition-duration: 0;
  -moz-transition-duration: 0;
  transition-duration: 0;
  -webkit-box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.1);
  -moz-box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.1);
  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.1);
}
.claro .dijitSelectFocused .dijitButtonContents {
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
}
.claro .dijitTextBoxFocused {
  background-color: #ffffff;
  background-image: none;
}
.claro .dijitTextBoxFocused .dijitInputContainer {
  background: transparent;
}
.claro .dijitSelectErrorFocused,
.claro .dijitSelectErrorFocused .dijitButtonContents,
.claro .dijitTextBoxErrorFocused,
.claro .dijitTextBoxErrorFocused .dijitButtonNode {
  border-color: #c65353;
}
/* disabled state */
.claro .dijitSelectDisabled,
.claro .dijitSelectDisabled .dijitButtonContents,
.claro .dijitTextBoxDisabled,
.claro .dijitTextBoxDisabled .dijitButtonNode {
  border-color: #dddddd;
}
.claro .dijitSelectDisabled,
.claro .dijitTextBoxDisabled,
.claro .dijitTextBoxDisabled .dijitInputContainer {
  background-color: transparent;
  background-image: none;
}
.claro .dijitSelectDisabled,
.claro .dijitTextBoxDisabled,
.claro .dijitTextBoxDisabled .dijitInputInner {
  color: rgba(68, 68, 68, 0.5);
}
.dj_webkit .claro .dijitDisabled input {
  /* because WebKit lightens disabled input/textarea no matter what color you specify */

  color: rgba(55, 55, 55, 0.5);
}
.dj_webkit .claro textarea.dijitTextAreaDisabled {
  /* because WebKit lightens disabled input/textarea no matter what color you specify */

  color: rgba(0, 0, 0, 0.5);
}
/*========================= for special widgets =========================*/
/* Input boxes with an arrow (for a drop down) */
.claro .dijitSelect .dijitArrowButtonInner,
.claro .dijitComboBox .dijitArrowButtonInner {
  background-image: url("../form/images/commonFormArrows.png");
  background-position: -35px 53%;
  background-repeat: no-repeat;
  margin: 0;
  width: 16px;
}
.claro .dijitComboBox .dijitArrowButtonInner {
  border: 1px solid transparent;
}
.claro .dijitToolbar .dijitComboBox .dijitArrowButtonInner {
  border: none;
}
.claro .dijitToolbar .dijitComboBox .dijitArrowButtonInner {
  border: none;
}
/* Add 1px vertical padding to the <input> where user types and the validation icon,
   to match the 1px border on arrow button */
.claro .dijitSelectLabel,
.claro .dijitTextBox .dijitInputInner,
.claro .dijitValidationTextBox .dijitValidationContainer {
  padding: 1px 0;
}
.claro .dijitComboBox .dijitButtonNode {
  background-color: #e9e9e9;
  background-image: none;
}
/* Arrow "hover" effect:
 * The arrow button should change color whenever the mouse is in a position such that clicking it
 * will toggle the drop down.   That's either (1) anywhere over the ComboBox or (2) over the arrow
 * button, depending on the openOnClick setting for the widget.
 */
.claro .dijitComboBoxOpenOnClickHover .dijitButtonNode,
.claro .dijitComboBox .dijitDownArrowButtonHover,
.claro .dijitComboBoxFocused .dijitArrowButton {
  background-color: #e1e1e1;
}
.claro .dijitComboBoxOpenOnClickHover .dijitArrowButtonInner,
.claro .dijitComboBox .dijitDownArrowButtonHover .dijitArrowButtonInner {
  background-position: -70px 53%;
}
/* Arrow Button change when drop down is open */
.claro .dijitComboBox .dijitHasDropDownOpen {
  background-color: #dddddd;
  background-image: none;
  padding: 1px;
}
.dj_iequirks .claro .dijitComboBox .dijitHasDropDownOpen {
  padding: 1px 0;
}
.claro .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
  background-position: -70px 53%;
  border: 0 none;
}
/* disabled state */
.claro div.dijitComboBoxDisabled .dijitArrowButtonInner {
  /* specific selector set to override background-position setting from Button.js
	 * (.claro .dijitComboBoxDisabled .dijitArrowButtonInner) */

  background-position: 0 50%;
  background-color: #eeeeee;
}
/*========================= hacks for browsers =========================*/
/* it seems the input[type="hidden"] has a height (16px) too... this may cause the widget's height calculate error */
.dj_ff3 .claro .dijitInputField input[type="hidden"] {
  display: none;
  height: 0;
  width: 0;
}
.dj_borderbox .claro .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
  width: 18px;
}
.dj_borderbox .claro .dijitComboBoxFocused .dijitHasDropDownOpen .dijitArrowButtonInner {
  width: 16px;
}
